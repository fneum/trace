# SPDX-FileCopyrightText: 2020-2022 Johannes Hampp
#
# SPDX-License-Identifier: GPL-3.0-or-later

logging:
  level: INFO

remote:
  ssh: "z1"
  path: "SCRATCH/projects/import-benefits/trace"

scenarios:
  low-electrolysis-75:
    modifiers:
      CAPEX_electrolysis: 0.75
  low-electrolysis-50:
    modifiers:
      CAPEX_electrolysis: 0.5
  high-dac-150:
    modifiers:
      CAPEX_DAC: 1.5
  high-dac-200:
    modifiers:
      CAPEX_DAC: 2
  high-dac-300:
    modifiers:
      CAPEX_DAC: 3
  high-wacc-12:
    modifiers:
      wacc: 1.71429 # 12%
  low-wacc-3:
    modifiers:
      wacc: 0.42857 # 3%
  high-wacc-10:
    modifiers:
      wacc: 1.42857 # 10%
  low-wacc-5:
    modifiers:
      wacc: 0.71428 # 5%
  high-wacc-8:
    modifiers:
      wacc: 1.14286 # 10%
  low-wacc-6:
    modifiers:
      wacc: 0.85714 # 5%
  high-bioco2cost-150:
    modifiers:
      OPEX_bioco2: 1.5 #75 €/MWh
  high-bioco2cost-200:
    modifiers:
      OPEX_bioco2: 2 # 100 €/MWh
  cavern-h2-storage:
    modifiers:
      CAPEX_H2storage: 0.045 # 2.1164 / 47.5247 €/kWh
  excess-power-20:
    modifiers:
      WTP_excess_power: 2 # 20 €/MWh
  excess-power-30:
    modifiers:
      WTP_excess_power: 3 # 30 €/MWh
  excess-power-40:
    modifiers:
      WTP_excess_power: 4 # 40 €/MWh
  excess-power-50:
    modifiers:
      WTP_excess_power: 5 # 50 €/MWh
  waste-heat-5:
    modifiers:
      WTP_waste_heat: 0.5 # 5 €/MWh
  waste-heat-20:
    modifiers:
      WTP_waste_heat: 2 # 20 €/MWh
  default:   # All scenarios are based on this scenario and may overwrite the here specified parameters
        # WACC scenario assumptions, see "data/wacc.csv"
        # Currently supported: homogeneous, irena, inhomogeneous
    wacc: "pypsa-eur-sec"

        # Import profile (time-series) for import demand.
        # Maybe any of the files in data/import_profiles/<import_profile>.csv or "buffered":
        # - constant: Constant import_profile (baseload) with hourly demand as specified in <ESC>/loads.csv
        # - night-60_day-100: Import profile with demand as specified in <ESC>/loads.csv, weighted with 60% during night time.
    import_profile: "constant"

        # Imports are by default not buffered, i.e. the import_profile must unconditionally be met
        # Alternatively an buffer may be added to the import location, such that the import demand
        # must only be met on a different time-scale. The buffer does not add additional costs.
        # Currently supported values:
        #  - False  : No buffering (default)
        #  - annually : Demand is buffered on an annual basis; import demand has to be met on an annual basis
    import_buffer: "annually"

    # Which demand data to use to determine available supplies
    # "custom" -> use "data/overwrite/demand.csv"
    synthetic_demand: "custom"

    # Which supply technologies of the supply to include and use with the ESC
    # the naming following the internal naming used in the technology data repository, i.e.:
    # currently supported technologies: ["csp-tower", "offwind", "onwind", "solar-utility"]
    supply_technologies: ["offwind", "onwind", "solar-utility"]

    # Set default marginal_cost and capital_cost for any component - generator, link, store -
    # if the cost is == 0
    # Should help to bring more stability into the model
    capital_cost:
      default: 0.1
    marginal_cost:
      default: 0.0

    # Modify certain aspects of the models, for sensitivity analysis
    # Modification factor in pu
    modifiers:
      wacc: 1
      import_demand: 1             # Related to network loads (= import demand)
      synthetic_demand: 1          # Amount of synthetic demand (domestic demand) used in supply curve reservation
      CAPEX_RES: 1                 # CAPEX of RES: PV, onshore and offshore wind
      CAPEX_battery: 1             # CAPEX of batteries and battery inverters
      CAPEX_electrolysis: 1        # CAPEX of electrolysis
      CAPEX_MeOHSynthesis: 1       # CAPEX related to methanol synthesis
      CAPEX_pipeline: 1            # CAPEX of pipeline and related technologies (H2 and CH4, submarine and onland, pipeline and pipeline compressors)
      CAPEX_DAC: 1                 # CAPEX of DAC
      CAPEX_H2storage: 1           # CAPEX of hydrogen storage
      OPEX_bioco2: 1               # cost of biogenic CO2
      WTP_excess_power: 1          # willingness to pay for excess power 
      WTP_waste_heat: 1          # willingness to pay for waste heat 

# Weather year for which ERA5 data is used
renewables:
  era5_year: 2013

  # Ignore renewable classes below this capacity [MW]
  # when create the supply curves and attaching RES to each network
  ignore_capacities_below: 100

  wind_onshore:

    # Part of the region to build in. Allowed values: ["onshore", "offshore"]
    # * "onshore" = region specified by GADM boundaries
    # * "offshore" = region specified as EEZ
    build_in: ["onshore"]
    max_shore_distance: false

    # Copernicus Land Cover
    copernicus:
      # Areas with these landcover codes are considered eligible for the RES technology
      include_codes: [20, 30, 40, 60, 100, 111, 112, 113, 114, 115, 116, 121, 122, 123, 124, 125, 126] # Open forest, unknown # 200,  # Open sea


      # A buffer zone with <distance_to_codes> m around the <distancing_codes> land cover
      # codes (types) is considered not eligible for the RES technology
      distancing_codes: [50]
      distance_to_codes: 1000

    # Maximum depth of a cell in the GEBCO map (relevant for offshore technologies)
    gebco:
      max_depth: 0
      max_altitude: 2000

      # Maximum slope (in %) allowed
      # calculated using richdem: https://richdem.readthedocs.io/en/latest/terrain_attributes.html
      # ("slope_percentage")
      max_slope: 30

    # World Database of Protected Areas
    wdpa:
      # PAs with one following statuses are included in the land availability analysis
      # (excluded from the eligible areas for building RES)
      include_status: ["Adopted", "Designated", "Established", "Inscribed", "Proposed"]

      # Layers of the WDPA to consider.
      # Polygons represent the shape and location of a PA (accurate).
      # Points only represent an estimate location of the PA and the reported area of the PA
      # is then used in conjungtion with the estimate location to exclude an approximate area
      # of the PA (less accurate).
      # Some PAs are only reported as "points". If only "polygons" are selected, then those PAs
      # are not considered.
      layers: ["polygons", "points"]

    wdpa_marine: false
    shipping_routes: false

    # in MW/km^2
    # Based on ENPRESO non-floating offshore wind
    # http://data.europa.eu/89h/6d0774ec-4fe5-4ca3-8564-626f4927744e
    #technical_potential: 5
    # Estimate, based on large-scale wind deployment and ability of wind to regenerate momentum
    # over large areas
    technical_potential: 3

    # Number of quality classes into which RES layout is created based on annual capacity factor
    number_quality_classes: 30

    # Configuration used by atlite for modelling technology
    atlite:
      method: "wind"
      turbine: "Vestas_V112_3MW"

  wind_offshore:

    # Part of the region to build in. Allowed values: ["onshore", "offshore"]
    # * "onshore" = region specified by GADM boundaries
    # * "offshore" = region specified as EEZ
    build_in: ["offshore"]

    # Offshore regions are automatically added for all countries of the region
    # based on the countries' EEZs, as long as the offshore regions are
    # adjacent to any of the onland regions and within a radius off
    # <max_shore_distance> m.
    max_shore_distance: 50000

    # Copernicus Land Cover
    copernicus:
      # Areas with these landcover codes are considered eligible for the RES technology
      include_codes: [80, 200]

      # A buffer zone with <distance_to_codes> m around the <distancing_codes> land cover
      # codes (types) is considered not eligible for the RES technology
      distancing_codes: []
      distance_to_codes: 1000

    # Minimum/maximum elevation in m[etre] for a cell in the GEBCO map
    gebco:
      # Based on ENPRESO non-floating offshore wind
      # http://data.europa.eu/89h/6d0774ec-4fe5-4ca3-8564-626f4927744e
      max_depth: -60
      max_altitude: 2000

      # Slope restrictions not relevant offshore
      max_slope: false

    # World Database of Protected Areas
    wdpa:
      # PAs with one following statuses are included in the land availability analysis
      # (excluded from the eligible areas for building RES)
      include_status: ["Adopted", "Designated", "Established", "Inscribed", "Proposed"]

      # Layers of the WDPA to consider.
      # Polygons represent the shape and location of a PA (accurate).
      # Points only represent an estimate location of the PA and the reported area of the PA
      # is then used in conjungtion with the estimate location to exclude an approximate area
      # of the PA (less accurate).
      # Some PAs are only reported as "points". If only "polygons" are selected, then those PAs
      # are not considered.
      layers: ["polygons", "points"]

    # World Database of Protected Marine Areas
    wdpa_marine:
      # MPAs with one following statuses are included in the land availability analysis
      # (excluded from the eligible areas for building RES)
      include_status: ["Adopted", "Designated", "Established", "Inscribed", "Proposed"]

      # Same as the "layers" description for "wdpa"
      layers: ["polygons", "points"]

    # Global Shipping Travel Densities to consider
    shipping_routes:
      # Only consider areas with number of AIS contacts per hour below this threshold
      # (i.e. max. 400 AIS contacts per raster cell per hours; number of AIS contacts indicates ship activity)
      max_density_threshold: 400

    # in MW/km^2
    technical_potential: 3

    # Number of quality classes into which RES layout is created based on annual capacity factor
    number_quality_classes: 10

    # Configuration used by atlite for modelling technology
    atlite:
      method: "wind"
      turbine: "NREL_ReferenceTurbine_5MW_offshore"

  pvplant:
    build_in: ["onshore"]
    max_shore_distance: false
    copernicus:
      include_codes: [20, 30, 40, 50, 60, 90, 100]
      distancing_codes: []
      distance_to_codes: 0
    wdpa:
      include_status: ["Adopted", "Designated", "Established", "Inscribed", "Proposed"]
      layers: ["polygons", "points"]
    wdpa_marine: false
    shipping_routes: false
    gebco: false
    technical_potential: 5.1 # Based on ENPRESO 85 W/m^2 and 3% land availability
    number_quality_classes: 30
    atlite:
      method: "pv"
      panel: "CSi"
      orientation: "latitude_optimal"

  csp_tower:
    build_in: ["onshore"]
    max_shore_distance: false
    copernicus:
      include_codes: [20, 30, 40, 60, 90]
      distancing_codes: [50]
      # Murphy et al (2019), table 12 / pg. 89 .
      distance_to_codes: 3000
    wdpa:
      include_status: ["Adopted", "Designated", "Established", "Inscribed", "Proposed"]
      layers: ["polygons", "points"]
    wdpa_marine: false
    shipping_routes: false
    gebco:
      max_depth: false
      max_altitude: false
      # Slopy regions as not very suitable for CSP, see:
      # Murphy et al (2019), table 12 / pg. 89 .
      max_slope: 3
    technical_potential: 5.1 # Based on ENPRESO 85 W/m^2 and 3% land availability
    number_quality_classes: 50
    atlite:
      method: "csp"
      installation: "SAM_solar_tower"

    # Composition to CSP power plant to use for field, storage and power block
    # Used to estimate LCoE of CSP installation for determining supply curves.
    # Based on Baseline Tower Plant from NREL, Table 9 / pg. 79 in:
    # Murphy et al (2019): "The Potential Role of CSP within the Context of DOE's 2030 Solar Cost Targets"
    # URL: https://www.osti.gov/biblio/1491726/
    solar_multiple_estimate: 2.7

regions:
  # Region definitions rely on the GADM database (https://gadm.org)
  # Regions are identified by their full-name in the database for each level
  # For each level parent levels need to be specified seperated by a "->",
  # e.g. for a region containing Florida (USA) and Canada:
  # "CA-USFL": ["United States -> Florida", "Canada"]
  AR-South: 
  - Argentina -> Tierra del Fuego
  - Argentina -> Santa Cruz
  - Argentina -> Chubut
  - Argentina -> Río Negro
  - Argentina -> Neuquén
  AR-North:
  - Argentina -> Formosa
  - Argentina -> La Pampa
  - Argentina -> Santa Fe
  - Argentina -> Córdoba
  - Argentina -> La Rioja
  - Argentina -> Catamarca
  - Argentina -> Misiones
  - Argentina -> Corrientes
  - Argentina -> Tucumán
  - Argentina -> San Luis
  - Argentina -> Mendoza
  - Argentina -> Salta
  - Argentina -> Jujuy
  - Argentina -> Entre Ríos
  - Argentina -> Buenos Aires
  - Argentina -> Chaco
  - Argentina -> San Juan
  - Argentina -> Ciudad de Buenos Aires
  - Argentina -> Santiago del Estero
  AU-West:
  - Australia -> Western Australia
  AU-East:
  - Australia -> Queensland
  - Australia -> New South Wales
  - Australia -> Victoria
  - Australia -> Tasmania
  - Australia -> South Australia
  - Australia -> Australian Capital Territory
  - Australia -> Northern Territory
  BR-Northeast:
  - Brazil -> Bahia
  - Brazil -> Tocantins
  - Brazil -> Sergipe
  - Brazil -> Alagoas
  - Brazil -> Pernambuco
  - Brazil -> Paraíba
  - Brazil -> Rio Grande do Norte
  - Brazil -> Ceará
  - Brazil -> Piauí
  - Brazil -> Maranhão
  BR-Southeast:
  - Brazil -> Rio Grande do Sul
  - Brazil -> Santa Catarina
  - Brazil -> Paraná
  - Brazil -> Mato Grosso do Sul
  - Brazil -> Goiás
  - Brazil -> Distrito Federal
  - Brazil -> Minas Gerais
  - Brazil -> São Paulo
  - Brazil -> Espírito Santo
  - Brazil -> Rio de Janeiro
  CA-East: 
  - Canada -> Manitoba
  - Canada -> Ontario
  - Canada -> Québec
  - Canada -> Newfoundland and Labrador
  - Canada -> New Brunswick
  - Canada -> Prince Edward Island
  - Canada -> Nova Scotia
  CL:
  - Chile
  CN-Northeast:
  - China -> Nei Mongol
  - China -> Heilongjiang
  - China -> Jilin
  - China -> Liaoning
  - China -> Beijing
  - China -> Hebei
  - China -> Tianjin
  - China -> Shanxi
  - China -> Shandong
  - China -> Shaanxi
  - China -> Henan
  - China -> Jiangsu
  - China -> Anhui
  - China -> Shanghai
  CN-Southeast: 
  - China -> Hubei
  - China -> Chongqing
  - China -> Zhejiang
  - China -> Jiangxi
  - China -> Hunan
  - China -> Guizhou
  - China -> Fujian
  - China -> Guangxi
  - China -> Guangdong
  - China -> Hainan
  CN-West: 
  - China -> Ningxia Hui
  - China -> Yunnan
  - China -> Sichuan
  - China -> Xizang
  - China -> Qinghai
  - China -> Gansu
  - China -> Xinjiang Uygur
  DZ: 
  - Algeria
  EG: 
  - Egypt
  KZ: 
  - Kazakhstan
  LY: 
  - Libya
  MA: 
  - Morocco
  EH:
  - Western Sahara
  NA: 
  - Namibia
  OM: 
  - Oman
  SA: 
  - Saudi Arabia
  TN: 
  - Tunisia
  TR: 
  - Turkey
  UA: 
  - Ukraine
  US-Northeast:
  - United States -> Maine
  - United States -> Vermont
  - United States -> New Hampshire
  - United States -> Massachusetts
  - United States -> Michigan
  - United States -> New York
  - United States -> Rhode Island
  - United States -> Wisconsin
  - United States -> Connecticut
  - United States -> New Jersey
  - United States -> Pennsylvania
  - United States -> Ohio
  - United States -> Delaware
  - United States -> Maryland
  - United States -> District of Columbia
  - United States -> Indiana
  - United States -> Illinois
  - United States -> West Virginia
  - United States -> Virginia
  - United States -> Kentucky
  - United States -> Iowa
  - United States -> Minnesota
  - United States -> Missouri
  US-Southeast:
  - United States -> North Carolina
  - United States -> Florida
  - United States -> Tennessee
  - United States -> South Carolina
  - United States -> Georgia
  - United States -> Alabama
  - United States -> Mississippi
  US-Northwest:
  - United States -> Washington
  - United States -> Oregon
  - United States -> Idaho
  - United States -> Montana
  - United States -> Wyoming
  - United States -> North Dakota
  - United States -> South Dakota
  - United States -> Nebraska
  US-South:
  - United States -> Kansas
  - United States -> Texas
  - United States -> Arkansas
  - United States -> Oklahoma
  - United States -> Louisiana
  US-Southwest:
  - United States -> Colorado
  - United States -> New Mexico
  - United States -> California
  - United States -> Nevada
  - United States -> Arizona
  - United States -> Utah
  US-Alaska:
  - United States -> Alaska
  MX:
  - Mexico
  GE:
  - Georgia
  AZ:
  - Azerbaijan
  QA:
  - Qatar
  AE:
  - United Arab Emirates
  KW:
  - Kuwait
  TM:
  - Turkmenistan
  UZ:
  - Uzbekistan
  MN:
  - Mongolia
  PK:
  - Pakistan
  VN:
  - Vietnam
  MM:
  - Myanmar
  TH:
  - Thailand
  LK:
  - Sri Lanka
  ZA:
  - South Africa
  KE:
  - Kenya
  TZ:
  - Tanzania
  NG:
  - Nigeria
  AO:
  - Angola
  ET:
  - Ethiopia
  MZ:
  - Mozambique
  ER:
  - Eritrea
  MR:
  - Mauritania
  SN:
  - Senegal
  UY:
  - Uruguay
  CO:
  - Colombia
  PE:
  - Peru
  IN-Northwest:
  - India -> Gujarat
  - India -> Rajasthan
  - India -> Madhya Pradesh
  - India -> Uttar Pradesh
  - India -> NCT of Delhi
  - India -> Haryana
  - India -> Punjab
  - India -> Uttarakhand
  - India -> Himachal Pradesh
  - India -> Jammu and Kashmir
  IN-South:
  - India -> Odisha
  - India -> Chhattisgarh
  - India -> Maharashtra
  - India -> Andhra Pradesh
  - India -> Telangana
  - India -> Karnataka
  - India -> Goa
  - India -> Tamil Nadu
  - India -> Kerala
  IN-East:
  - India -> Bihar
  - India -> Jharkhand
  - India -> West Bengal
  - India -> Sikkim
  - India -> Assam
  - India -> Meghalaya
  - India -> Arunachal Pradesh
  - India -> Nagaland
  - India -> Manipur
  - India -> Tripura
  - India -> Mizoram
  IS:
  - Iceland
  IL:
  - Israel
  SD:
  - Sudan
  SY:
  - Syria
  YE:
  - Yemen
  JO:
  - Jordan
  IR:
  - Iran
  IQ:
  - Iraq
  AF:
  - Afghanistan
  SO:
  - Somalia
  MG:
  - Madagascar
  DJ:
  - Djibouti
  BO:
  - Bolivia
  VE:
  - Venezuela

detour_factors:
  transmission_line: 1.2
  pipeline: 1.4
  shipping: 1.

# Which technology-data version to use for cost assumptions
# May be either a branch (like e.g. "master") or a full-commit hash
# see: https://github.com/PyPSA/technology-data
technology_data: "v0.9.1"

time_resolution: "3h"

demand_factor: 2 # factor applied projected electricity demand, e.g. to account for electrification of other sectors

solver:
  pypsa-eur:              # based on: https://github.com/PyPSA/pypsa-eur/blob/master/config.default.yaml (works well)
    name: gurobi
    # Presolve: 1           # Conservative presolving; Aggressive consumes too much memory
    # PreSparsify: 2        # Force sparsify reduction in an attempt to reduce memory consumption
    method: 2             # barrier
    crossover: 0
    BarConvTol: 1.e-4
    FeasibilityTol: 1.e-6
    AggFill: 0
    PreDual: 0
    GURO_PAR_BARDENSETHRESH: 200
    threads: 4            # Less threads less memory; more threads sometimes faster
    seed: 10              # Consistent seed for all plattforms
  default:
    name: gurobi
    Presolve: 1           # Conservative presolving; Aggressive consumes too much memory
    BarHomogeneous: 1     # Use homogeneous barrier if standard does not converge
    PreDual: 2            # form primal and dual during presolve, heuristically choose
    method: 2             # barrier
    crossover: 0          # do not use crossover
    BarConvTol: 1.e-5
    FeasibilityTol: 1.e-5
    OptimalityTol: 1.e-5
    threads: 4
    seed: 10              # Consistent seed for all plattforms
  numeric-focus:
    name: gurobi
    NumericFocus: 3       # Favour numeric stability over speed
    method: 2             # barrier
    crossover: 0          # do not use crossover
    BarHomogeneous: 1     # Use homogeneous barrier if standard does not converge
    BarConvTol: 1.e-5
    FeasibilityTol: 1.e-4
    OptimalityTol: 1.e-4
    ObjScale: -0.5
    threads: 8
    seed: 10              # Consistent seed for all plattforms
  numeric-focus-scaled:
    name: gurobi
    NumericFocus: 3       # Favour numeric stability over speed
    method: 2             # barrier
    crossover: 0          # do not use crossover
    BarHomogeneous: 1     # Use homogeneous barrier if standard does not converge
    ScaleFlag: 3
    BarConvTol: 1.e-5
    FeasibilityTol: 1.e-4
    OptimalityTol: 1.e-4
    ObjScale: 100
    threads: 8
    seed: 10              # Consistent seed for all plattforms
  fallback:
        # Use gurobi defaults
    name: gurobi
    crossover: 0
    method: 2             # barrier
    BarHomogeneous: 1     # Use homogeneous barrier if standard does not converge
    BarConvTol: 1.e-5
    FeasibilityTol: 1.e-5
    OptimalityTol: 1.e-5
    seed: 10              # Consistent seed for all plattforms
    threads: 8
